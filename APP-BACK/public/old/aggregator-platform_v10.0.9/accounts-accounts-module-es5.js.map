{"version":3,"sources":["webpack:///src/app/layout/accounts/accounts.component.html","webpack:///src/app/layout/accounts/accounts-routing.module.ts","webpack:///src/app/layout/accounts/accounts.component.scss","webpack:///src/app/layout/accounts/accounts.component.ts","webpack:///src/app/layout/accounts/accounts.module.ts","webpack:///src/app/shared/services/accounts/transactions.service.ts"],"names":["routes","path","component","children","redirectTo","pathMatch","loadChildren","then","m","FloatingDepositsModule","IurModule","TransactionsModule","AccountsRoutingModule","imports","forChild","exports","AccountsComponent","transactionsService","selector","template","AccountsModule","declarations","TransactionsService","http","url","serverURL","filterData","post","id","get","formData","providedIn"],"mappings":"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","file":"accounts-accounts-module-es5.js","sourcesContent":["export default \"<router-outlet></router-outlet>\\r\\n\"","import { AccountsComponent } from './accounts.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'floating-deposits', pathMatch: 'prefix' },\r\n      { path: 'floating-deposits', loadChildren: () => import('./floating-deposits/floating-deposits.module').then(m => m.FloatingDepositsModule) },\r\n      { path: 'iur', loadChildren: () => import('./iur/iur.module').then(m => m.IurModule) },\r\n      { path: 'transactions', loadChildren: () => import('./transactions/transactions.module').then(m => m.TransactionsModule) },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountsRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9hY2NvdW50cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TransactionsService } from 'src/app/shared/services/accounts/transactions.service';\r\nimport { Router } from '@angular/router';\r\nimport { Transaction } from \"src/app/shared/models/transaction.interface\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-accounts',\r\n  templateUrl: './accounts.component.html',\r\n  styleUrls: ['./accounts.component.scss']\r\n})\r\nexport class AccountsComponent implements OnInit {\r\n\r\n  constructor(private transactionsService: TransactionsService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { FloatingDepositsComponent } from './floating-deposits/floating-deposits.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountsRoutingModule } from './accounts-routing.module';\r\nimport { IurComponent } from './iur/iur.component';\r\nimport { TransactionsComponent } from './transactions/transactions.component';\r\nimport { AccountsComponent } from './accounts.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AccountsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AccountsRoutingModule\r\n  ]\r\n})\r\nexport class AccountsModule { }\r\n","import { environment } from '../../../../environments/environment';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TransactionsService {\r\n    url = environment.serverURL;\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    // Get All users role list\r\n    getList(filterData: any) {\r\n        return this.http.post(`${this.url}/api/transaction-list`, filterData);\r\n    }\r\n\r\n    // Get User role Details\r\n    getTransaction(id: any) {\r\n        return this.http.get(`${this.url}/api/transaction-view/${id}`);\r\n    }\r\n\r\n    getTopUplist(filterData: any){\r\n        return this.http.post(`${this.url}/api/get-topup-list`, filterData);\r\n    }\r\n    // Get User role Details\r\n    getTopup(id: any) {\r\n        return this.http.get(`${this.url}/api/get-topup-view/${id}`);\r\n    }\r\n\r\n    updateTopup(formData: any){\r\n        return this.http.post(`${this.url}/api/update-topup-request`, formData);\r\n    }\r\n\r\n    getFloatingDepositList(formData: any){\r\n        return this.http.post(`${this.url}/api/get-floating-deposit-list`, formData);\r\n    }\r\n\r\n    addFloatingRequest(formData: any){\r\n        return this.http.post(`${this.url}/api/add-floating-deposit`, formData);\r\n    }\r\n\r\n    makeCorpTransaction(formData: any){\r\n        return this.http.post(`${this.url}/api/make-corporate-transaction`, formData);\r\n    }\r\n\r\n    addAgentTransaction(formData: any){\r\n        return this.http.post(`${this.url}/api/make-agent-transaction`, formData);\r\n    }\r\n    getOrganisationAccount(){\r\n        return this.http.get(`${this.url}/api/get-self-organisation-account`);\r\n    }\r\n\r\n    exportTransaction(formData: any){\r\n        return this.http.post(`${this.url}/api/export-transaction`, formData);\r\n    }\r\n    \r\n}\r\n"]}