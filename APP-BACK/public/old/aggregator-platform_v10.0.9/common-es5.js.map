{"version":3,"sources":["webpack:///src/app/layout/country-list/country-list.component.html","webpack:///src/app/layout/country-list/country-list.component.scss","webpack:///src/app/layout/country-list/country-list.component.ts","webpack:///src/app/layout/country-list/country-list.module.ts","webpack:///src/app/shared/services/bookings.service.ts","webpack:///src/app/shared/services/common.service.ts","webpack:///src/app/shared/services/excel.service.ts","webpack:///src/app/shared/services/flight-search.service.ts","webpack:///src/app/shared/services/pointsale.service.ts","webpack:///src/app/shared/services/profile-management/profile-management.service.ts","webpack:///src/app/shared/services/report/report.service.ts","webpack:///src/app/shared/services/setup-config/setup-config.service.ts","webpack:///src/app/shared/utils/array.helper.ts"],"names":["CountryListComponent","commonService","countries","getCountries","getCountryList","subscribe","result","data","console","log","selector","template","CountryListModule","NgModule","providers","declarations","imports","exports","BookingsService","http","url","serverURL","formData","post","id","get","trip_id","responseType","ticket","providedIn","CommonService","fields","withCredentials","orgId","base64Img","b64","base64Pdf","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","json","excelFileName","worksheet","json_to_sheet","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","Blob","Date","getTime","FlightSearchService","url1","searchResults","airport","searchData","selectedOfferData","fareReq","farePayload","order","tripId","fare","initReissueData","repriceData","segmentListToUpdate","passengerListToUpdate","ticketListToUpdate","ticketListToCreate","ticketEmdListToCreate","bookingsListToUpdate","bookingsFlightListToUpdate","updateSegmentList","updatePassengerList","updateTicketList","createTicketList","createTicketEmdList","updateBookingsList","updateBookingsFlightList","POSService","ProfileManagementService","pager","pageOfItems","httpOptions","headers","JSON","stringify","pipe","errorHandl","travellID","limit","pageIndex","put","delete","options","error","errorMessage","ErrorEvent","message","status","ReportService","tourID","params","queryString","Object","keys","map","key","join","append","SetupConfigService","obj","page","convertToArray","value","arr","Array","isArray","push"],"mappings":"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","file":"common-es5.js","sourcesContent":["export default \"\\r\\n<div>\\r\\n    <label>Operating Country<span class=\\\"mandatory\\\">*</span></label>\\r\\n    <select class=\\\"ui fluid search dropdown\\\">\\r\\n      <option value=\\\"\\\"> Operating Country</option>\\r\\n      <option *ngFor=\\\"let country of countries\\\" value=\\\"{{country.country_id}}\\\">{{country.country}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jb3VudHJ5LWxpc3QvY291bnRyeS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CommonService } from 'src/app/shared/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-country-list',\r\n  templateUrl: './country-list.component.html',\r\n  styleUrls: ['./country-list.component.scss']\r\n})\r\nexport class CountryListComponent implements OnInit {\r\n  countries:string[]=[];\r\n  constructor(private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCountries();\r\n  }\r\n\r\n  getCountries() {\r\n    this.commonService.getCountryList().subscribe((result: any) => {\r\n      this.countries=result.countries;\r\n    });\r\n  }\r\n  selectedCountry(data){\r\n    console.log(data);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryListComponent } from './country-list.component';\r\nimport { CommonService } from 'src/app/shared/services/common.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CountryListComponent],\r\n  imports: [CommonModule],\r\n  exports:[CountryListComponent]\r\n})\r\nexport class CountryListModule { \r\n  static forRoot(){\r\n    return {\r\n      NgModule:CountryListModule,\r\n      providers:[CommonService]\r\n    }\r\n  }\r\n}\r\n","import { trigger } from '@angular/animations';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingsService {\r\n  url = environment.serverURL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  fetchBookings(formData: any) {\r\n    return this.http.post(`${this.url}/api/fetch-all-bookings`, formData);\r\n  }\r\n\r\n  // GET ALL\r\n  fetchBookingDetailById(id) {\r\n    return this.http.get(`${this.url}/api/fetch_value/${id}`);\r\n  }\r\n\r\n  exportBooking(formData: any) {\r\n    return this.http.post(`${this.url}/api/export-bookings`, formData);\r\n  }\r\n\r\n  // bookingVoucherPrint(trip_id){\r\n  //   return this.http.get(`${this.url}/api/booking-voucher-print/${trip_id}`, { responseType: 'blob'});\r\n  // }\r\n\r\n  bookingVoucherPrint(trip_id) {\r\n    return this.http.get(`${this.url}/api/booking-voucher-print/${trip_id}`);\r\n  }\r\n\r\n  bookingPrintPdf(trip_id) {\r\n    return this.http.get(`${this.url}/api/booking-print-invoice/${trip_id}`, { responseType: 'blob' });\r\n  }\r\n\r\n  ancillariesServiceListRequest(ticket?: any) {\r\n    return this.http.post(`${this.url}/api/ancillaries-service-list`, ticket);\r\n  }\r\n}\r\n","import { environment } from './../../../environments/environment';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CommonService {\r\n    url = environment.serverURL;\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    // Get Country list\r\n    getCountryList(){\r\n        return this.http.get(`${this.url}/api/get-country`);\r\n    }\r\n\r\n    // Get TimeZones list\r\n    getTimeZones(){\r\n        return this.http.get(`${this.url}/api/get-timezones`);\r\n    }\r\n\r\n    // Get Cities list\r\n    getCityList(id:any){\r\n        return this.http.get(`${this.url}/api/get-country-city/${id}`);\r\n    }\r\n\r\n    // get organization list\r\n    getOrganizationList(){\r\n        return this.http.get(`${this.url}/api/get-organization-list`);\r\n    }\r\n\r\n    getHierarchyByOrg(id: Number){\r\n        return this.http.get(`${this.url}/api/get-organization-hierarchy/${id}`);\r\n    }\r\n\r\n    \r\n    // get organization list\r\n    getAgentsList(){\r\n        return this.http.get(`${this.url}/api/get-agents-list`);\r\n    }\r\n\r\n    getHierarchyByApproval(id: Number){\r\n        return this.http.get(`${this.url}/api/get-organization-hierarchy-by-approval/${id}`);\r\n    }\r\n\r\n    getSettingList(fields: { name: string[] | string[]; }){\r\n        //console.log('╔═══════════════════════════════════════════════════╗')\r\n        //console.log('║ shared/services/common.service.ts::getSettingList ║')\r\n        //console.log('╚═══════════════════════════════════════════════════╝')\r\n        return this.http.post(`${this.url}/api/get-settings`, fields, {withCredentials: true});\r\n    }\r\n\r\n    getRficDetails(){\r\n        return this.http.get(`${this.url}/api/get-rfic-list`);\r\n    }\r\n\r\n    getAirlines(){\r\n        return this.http.get(`${this.url}/api/get-airlines-list`);\r\n    }\r\n\r\n    getSupplierList(){\r\n        return this.http.get(`${this.url}/api/get-supplier-list`);\r\n    }\r\n\r\n    getSelfAgentsList(){\r\n        return this.http.get(`${this.url}/api/get-self-agent-list`);\r\n    }\r\n  \r\n    getCurrencyList(){\r\n        return this.http.get(`${this.url}/api/get-currency-list`);\r\n    }\r\n\r\n    getStaffProfileList(orgId:any){\r\n        return this.http.get(`${this.url}/api/get-staff-profile-list/${orgId}`);\r\n    }\r\n\r\n    getChildCoporatesList(){\r\n        return this.http.get(`${this.url}/api/get-self-agent-list`);\r\n        // return this.http.get(`${this.url}/api/fetch-all-organization`);\r\n    }\r\n\r\n    getTransactionDetailByAgent(orgId:any){\r\n        return this.http.get(`${this.url}/api/get-transaction-detail-by-agent/${orgId}`);\r\n    }\r\n\r\n    getChildAgentList(){\r\n        return this.http.get(`${this.url}/api/get-self-agent-list`);\r\n    //    return this.http.get(`${this.url}/api/fetch-all-organization`);\r\n    }\r\n    \r\n    getFloatingSupplierList(){\r\n        return this.http.get(`${this.url}/api/get-floating-supplier-list`);\r\n    }\r\n\r\n    getAirportsList(){\r\n        return this.http.get(`${this.url}/api/get-airports-cache`);\r\n    }\r\n\r\n    \r\n    uploadImagetoAWS(base64Img){\r\n        return this.http.post(`${this.url}/api/upload-image-aws`, { b64: base64Img});\r\n    }\r\n\r\n    uploadPDFtoAWS(base64Pdf){\r\n        return this.http.post(`${this.url}/api/upload-pdf-aws`, { b64: base64Pdf});\r\n    }\r\n\r\n\r\n\r\n    getOrgBranches(orgId){\r\n        return this.http.get(`${this.url}/api/organization/branches/${orgId}`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n    // console.log('worksheet',worksheet);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { organizationH } from '../models/organization/organizaiton';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlightSearchService {\r\n  url = environment.serverURL + '/api/flights/';\r\n  url1=environment.serverURL + '/api/pos/';\r\n  searchResults = {};\r\n  constructor(private http: HttpClient) { }\r\n\r\n  airportsListing(airport?: any) {\r\n    return this.http.get(`${this.url}fetch-airports`);\r\n  }\r\n\r\n  searchFlight(searchData?: any) {\r\n    return this.http.post(`${this.url}air-shopping`, searchData);\r\n  }\r\n\r\n  flightPriceRequest(selectedOfferData?: any) {\r\n    return this.http.post(`${this.url}flight-price`, selectedOfferData);\r\n  }\r\n\r\n  fetchFareBaggageDetails(fareReq?: any) {\r\n    return this.http.post(`${this.url}flight-price`, { farePayload: fareReq });\r\n  }\r\n\r\n  /*fetchPAXDetails(paxType?: any) {\r\n    return this.http.get(`${this.url}all-pax-types`, {\r\n      params: { paxType }\r\n    });\r\n  }*/\r\n\r\n  /*fetchServicesGroups(type?: any) {\r\n    return this.http.get(`${this.url}all-services-groups`, {\r\n      params: { type }\r\n    });\r\n  }*/\r\n\r\n  orderCreateRequest(order?: any) {\r\n    return this.http.post(`${this.url}order-create`, order);\r\n  }\r\n\r\n  issueTicketRequest(ticket?: any) {\r\n    return this.http.post(`${this.url}air-doc-issue`, ticket);\r\n  }\r\n\r\n  cancelTicketRequest(ticket?: any) {\r\n    return this.http.get(`${this.url}booking-cancel/${ticket.tripId}`, ticket);\r\n  }\r\n\r\n  voidTicketRequest(ticket?: any) {\r\n    return this.http.get(`${this.url}booking-void/${ticket.tripId}`, ticket);\r\n  }\r\n\r\n  refundTicketRequest(ticket?: any) {\r\n    return this.http.get(`${this.url}refund/${ticket.tripId}`, ticket);\r\n  }\r\n\r\n  fareRulesRequest(fare?: any) {\r\n    return this.http.post(`${this.url}fare-rules`, fare);\r\n  }\r\n\r\n  itinReissueFlight(initReissueData?: any) {\r\n    return this.http.post(`${this.url}itin-reissue`, initReissueData);\r\n  }\r\n\r\n  itinReissueFlightRepriceOnly(repriceData?: any) {\r\n    return this.http.post(`${this.url}itin-reissue-reprice`, repriceData);\r\n  }\r\n\r\n  itinReissueFlightOrderChange(repriceData?: any) {\r\n    return this.http.post(`${this.url}itin-reissue-order-change`, repriceData);\r\n  }\r\n\r\n  fetchAllPos():Observable<organizationH> {\r\n      return this.http.get<organizationH>(`${this.url1}fetch-active-pos`)\r\n  }\r\n\r\n  itinReissueFlightOrderChangeDB(\r\n    segmentListToUpdate?: any,\r\n    passengerListToUpdate?: any,\r\n    ticketListToUpdate?: any,\r\n    ticketListToCreate?: any,\r\n    ticketEmdListToCreate?: any,\r\n    bookingsListToUpdate?: any,\r\n    bookingsFlightListToUpdate?: any\r\n  ) {\r\n    return this.http.post(`${this.url}itin-reissue-order-change-db`, {\r\n      updateSegmentList: segmentListToUpdate,\r\n      updatePassengerList: passengerListToUpdate,\r\n      updateTicketList: ticketListToUpdate,\r\n      createTicketList: ticketListToCreate,\r\n      createTicketEmdList: ticketEmdListToCreate,\r\n      updateBookingsList: bookingsListToUpdate,\r\n      updateBookingsFlightList: bookingsFlightListToUpdate\r\n    });\r\n  }\r\n}\r\n","import { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class POSService {\r\n  url = environment.serverURL;\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  fetchAllPointofSale(data) {\r\n    return this.http.post(`${this.url}/api/organization/fetch-pos`,data);\r\n  }  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { NewTravellerProfile } from './../../models/profile-management/new-traveller-profile';\r\nimport { NewGroupProfile } from './../../models/profile-management/new-group-profile';\r\nimport { NewCompanyProfile } from './../../models/profile-management/new-company-profile';\r\nimport { NewAgencyProfile } from './../../models/profile-management/new-agency-profile';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileManagementService {\r\n  url = environment.serverURL;\r\n  pager = {};\r\n  pageOfItems = [];\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // POST\r\n  NewTravellerProfile(data): Observable<NewTravellerProfile> {\r\n    return this.http.post<NewTravellerProfile>(`${this.url}/api/create-new-traveller-profile`, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  NewGroupProfile(data): Observable<NewGroupProfile> {\r\n    return this.http.post<NewGroupProfile>(`${this.url}/api/create-new-group-profile`, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  NewCompanyProfile(data): Observable<NewCompanyProfile> {\r\n    return this.http.post<NewCompanyProfile>(`${this.url}/api/create-new-company-profile`, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  NewAgencyProfile(data): Observable<NewAgencyProfile> {\r\n    return this.http.post<NewAgencyProfile>(`${this.url}/api/create-new-agency-profile`, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET WITH ID\r\n  GetTravellerById(id): Observable<NewTravellerProfile> {\r\n    return this.http.get<NewTravellerProfile>(`${this.url}/api/fetch-new-traveller-profile` + id)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL\r\n  GetAllTraveller(travellID?, limit?, pageIndex?): Observable<NewTravellerProfile> {\r\n    return this.http.get<NewTravellerProfile>(`${this.url}/api/fetch-all-traveller-profile?page=${1}`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n  \r\n// GET ALL\r\n  GetAllCompanies(travellID?, limit?, pageIndex?): Observable<NewCompanyProfile> {\r\n    return this.http.get<NewCompanyProfile>(`${this.url}/api/fetch-all-company-profile`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  GetAllAgencies(travellID?, limit?, pageIndex?): Observable<NewAgencyProfile> {\r\n    return this.http.get<NewAgencyProfile>(`${this.url}/api/fetch-all-agency-profile`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  GetAllGroups(travellID?, limit?, pageIndex?): Observable<NewGroupProfile> {\r\n    return this.http.get<NewGroupProfile>(`${this.url}/api/fetch-all-group-profile`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // PUT\r\n  UpdateTravellerProfile(id, data): Observable<NewTravellerProfile> {\r\n    return this.http.put<NewTravellerProfile>(`${this.url}/api/update-new-traveller-profile?traveller_profile_id=` + id, JSON.stringify(data), this.httpOptions)\r\n      //return this.http.put<NewTravellerProfile>(`${this.url}/api/update-new-traveller-profile` + id, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  UpdateGroupProfile(id, data): Observable<NewGroupProfile> {\r\n    return this.http.put<NewGroupProfile>(`${this.url}/api/update-new-group-profile?group_profile_id=` + id, JSON.stringify(data), this.httpOptions)\r\n      //return this.http.put<NewTravellerProfile>(`${this.url}/api/update-new-traveller-profile` + id, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  UpdateAgencyProfile(id, data): Observable<NewAgencyProfile> {\r\n    return this.http.put<NewAgencyProfile>(`${this.url}/api/update-new-agency-profile?agency_profile_id=` + id, JSON.stringify(data), this.httpOptions)\r\n      //return this.http.put<NewTravellerProfile>(`${this.url}/api/update-new-traveller-profile` + id, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  UpdateCompanyProfile(id, data): Observable<NewCompanyProfile> {\r\n    return this.http.put<NewCompanyProfile>(`${this.url}/api/update-new-company-profile?company_profile_id=` + id, JSON.stringify(data), this.httpOptions)\r\n      //return this.http.put<NewTravellerProfile>(`${this.url}/api/update-new-traveller-profile` + id, JSON.stringify(data), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // DELETE\r\n  DeleteTravellerById(id) {\r\n    return this.http.delete<NewTravellerProfile>(`${this.url}/api/remove-traveller-profile?traveller_profile_id=` + id, this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  DeleteCompanyById(id) {\r\n    return this.http.delete<NewCompanyProfile>(`${this.url}/api/remove-company-profile?company_profile_id=` + id, this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  DeleteAgencyById(id) {\r\n    return this.http.delete<NewAgencyProfile>(`${this.url}/api/remove-agency-profile?agency_profile_id=` + id, this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  DeleteGroupById(id) {\r\n    return this.http.delete<NewGroupProfile>(`${this.url}/api/remove-group-profile?group_profile_id=` + id, this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  ReteriveProfileData(options) {\r\n    return this.http.post(`${this.url}/api/retrive-all-profiles-data`, options, this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // Error handling\r\n  errorHandl(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FlightSearchLog } from '../../models/report/flight-search';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { HotelSearchLog } from '../../models/report/hotel-log';\r\nimport { CarsSearchLog } from '../../models/report/car-log';\r\nimport { ActivitySearchLog } from '../../models/report/activity-log';\r\nimport { TransferSearchLog } from '../../models/report/transfer-log';\r\nimport { InsuranceSearchLog } from '../../models/report/insurance-log';\r\nimport { AuditTrail } from '../../models/report/audit-trail';\r\nimport { Segment } from '../../models/report/segment';\r\nimport { organizationH } from '../../models/organization/organizaiton';\r\nimport { DynamicReportParam } from '../../models/report/dynamic-report';\r\nimport { ListOfSupplers } from '../../models/setup-config/list-of-supplier';\r\nimport { PlatformCount } from '../../models/report/flight-platform-count';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportService {\r\n  url = environment.serverURL;\r\n  pager = {};\r\n  pageOfItems = [];\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // GET ALL FLIGHTS\r\n  GetAllFlightLogs(data:any): Observable<FlightSearchLog> {\r\n    return this.http.post<FlightSearchLog>(`${this.url}/api/fetch-all-Flight-Search-Log`,data)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL HOTELS\r\n  GetAllHotelLogs(data:any): Observable<HotelSearchLog> {\r\n    return this.http.post<HotelSearchLog>(`${this.url}/api/fetch-all-Hotel-Search-Log`,data)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL CARS\r\n  GetAllCarLogs(data:any): Observable<CarsSearchLog> {\r\n    return this.http.post<CarsSearchLog>(`${this.url}/api/fetch-all-Car-Search-Log`,data)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL ACTIVITY\r\n  GetAllActivityLogs(data:any): Observable<ActivitySearchLog> {\r\n    return this.http.post<ActivitySearchLog>(`${this.url}/api/fetch-all-Activities-Search-Log`,data)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL TRANSFER\r\n  GetAllTransferLogs(data:any): Observable<TransferSearchLog> {\r\n    return this.http.post<TransferSearchLog>(`${this.url}/api/fetch-all-Transfer-Search-Log`,data)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL INSURANCE\r\n  GetAllInsuranceLogs(data:any): Observable<InsuranceSearchLog> {\r\n    return this.http.post<InsuranceSearchLog>(`${this.url}/api/fetch-all-Insurance-Search-Log`,data)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL AUDIT TRAIL\r\n  GetAllAuditTrail(data:any): Observable<AuditTrail> {\r\n    return this.http.post<AuditTrail>(`${this.url}/api/fetch-all-Audit-Trail`,data)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL SEGMENTS\r\n  GetAllSegments(tourID?, limit?, pageIndex?): Observable<Segment> {\r\n    return this.http.get<Segment>(`${this.url}/api/fetch-all-segment-details`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  //Fetch all organization\r\n  GetAllOrganization(): Observable<organizationH> {\r\n    return this.http.get<organizationH>(`${this.url}/api/pos/fetch-active-pos`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  //POST\r\n  NewDynamicPivotTable(data): Observable<DynamicReportParam> {\r\n    return this.http.post<DynamicReportParam>(`${this.url}/api/dynamic-report-data`, data, this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  searchReportBooking(data: any) {\r\n    return this.http.post(`${this.url}/api/search-bookings-by-organisation`, data);\r\n  }\r\n\r\n  //search tickets\r\n  searchTicketReport(data: any) {\r\n    return this.http.post(`${this.url}/api/search-tickets-new`, data);\r\n  }\r\n\r\n  // GET audit trail search\r\n  GetAllAuditSearchReport(params): Observable<AuditTrail> {\r\n    var queryString = Object.keys(params).map(function (key) {\r\n      return key + '=' + params[key]\r\n    }).join('&');\r\n    return this.http.get<AuditTrail>(`${this.url}/api/get-audit-trails?${queryString}`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n  //Fetch all agents\r\n  GetAllAgents(): Observable<organizationH> {\r\n    return this.http.get<organizationH>(`${this.url}/api/fetch-all-organization`, {withCredentials: true})\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  //Fetch all products\r\n  GetAllProducts(tourID?, limit?, pageIndex?): Observable<DynamicReportParam> {\r\n    return this.http.get<DynamicReportParam>(`${this.url}/api/get-active-products`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  //Fetch all suppliers\r\n  GetAllSuppliers(tourID?, limit?, pageIndex?): Observable<ListOfSupplers> {\r\n    return this.http.get<ListOfSupplers>(`${this.url}/api/fetch-all-supplier`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  //Fetch all flight search platforms\r\n  GetAllFlightPlatforms(): Observable<PlatformCount> {\r\n    return this.http.get<PlatformCount>(`${this.url}/api/Flight-Search-Log/count`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n  //Fetch all flight search platforms\r\n  GetAllFlightMonthlyReport(): Observable<FlightSearchLog> {\r\n    return this.http.get<FlightSearchLog>(`${this.url}/api/Flight-Search-Log/monthlwise`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  //fetch all airport details\r\n  GetAllAirportCode(): Observable<DynamicReportParam> {\r\n    return this.http.get<DynamicReportParam>(`${this.url}/api/get-airports-cache`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  getAllBookingDetails(): Observable<DynamicReportParam> {\r\n    return this.http.get<DynamicReportParam>(`${this.url}/api/fetch_value/:id`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // Get User role Details\r\n  getFlightBookingDetails(id: any) {\r\n    return this.http.get(`${this.url}/api/booking/${id}`);\r\n  }\r\n\r\n  GetSearchedSegmentReports(params){\r\n    let headers = new HttpHeaders();\r\n     headers.append('Content-Type','application/json');\r\n    return this.http.post<Segment>(`${this.url}/api/search-segments`, params,{ headers: headers})\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandl)\r\n    )\r\n  }\r\n\r\n  GetFilteredFlightSearch(params): Observable<FlightSearchLog> {\r\n\r\n    return this.http.post<FlightSearchLog>(`${this.url}/api/fetch-all-Flight-Search-Log`,params)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  exportBooking(data:any) {\r\n    return this.http.post(`${this.url}/api/export-booking-report`,data);\r\n  }\r\n\r\n  exportSearchLog(data:any){\r\n    return this.http.post(`${this.url}/api/export-search-log-report`,data);\r\n  }\r\n\r\n  exportTicket(data:any){\r\n    return this.http.post(`${this.url}/api/export-tickets-report`,data);\r\n  }\r\n  // Error handling\r\n  errorHandl(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { trigger } from '@angular/animations';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AirlineDeals } from '../../models/setup-config/airline-deals';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { AirlineCommission } from '../../models/setup-config/airline-commission';\r\nimport { ListOfSupplers } from '../../models/setup-config/list-of-supplier';\r\nimport { ContentManagement } from '../../models/setup-config/content-management';\r\nimport { EmailTemplates } from '../../models/setup-config/email-template';\r\nimport { CurrencyConfig } from '../../models/setup-config/currency-config';\r\n\r\nimport { GroupSeasonality } from '../../models/setup-config/group_seasonality';\r\nimport { Markups } from '../../models/setup-config/markups';\r\nimport { AirlineRoutes } from '../../models/setup-config/airline-routes';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SetupConfigService {\r\n  url = environment.serverURL;\r\n  pager = {};\r\n  pageOfItems = [];\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // GET ALL\r\n  GetAllAirlines(formData: any): Observable<AirlineDeals> {\r\n\r\n    return this.http.post<AirlineDeals>(`${this.url}/api/fetch-all-tourcodes`, formData)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // read all commissions\r\n  GetAllAirCommissions(formData: any): Observable<AirlineCommission> {\r\n    return this.http.post<AirlineCommission>(`${this.url}/api/fetch-all-commissions`, formData)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n    // GET ALL SUPPLIERS\r\n    FetchAllSuppliers(formData: any): Observable<ListOfSupplers> {\r\n      return this.http.get<ListOfSupplers>(`${this.url}/api/fetch-all-supplier`)\r\n        .pipe(\r\n          retry(1),\r\n          catchError(this.errorHandl)\r\n        )\r\n    }\r\n  \r\n\r\n  // GET ALL SUPPLIERS\r\n  GetAllSuppliers(formData: any): Observable<ListOfSupplers> {\r\n    console.log(\"formData::::\",formData);\r\n    return this.http.post<ListOfSupplers>(`${this.url}/api/read-all-supplier`,formData)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL\r\n  GetAllHotels(tourID?, limit?, pageIndex?): Observable<ContentManagement> {\r\n    return this.http.get<ContentManagement>(`${this.url}/api/fetch-all-content`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL\r\n  GetAllEmails(tourID?, limit?, pageIndex?): Observable<EmailTemplates> {\r\n    return this.http.get<EmailTemplates>(`${this.url}/api/fetch-all-email-template`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // GET ALL\r\n  GetAllCurrencies(formData: any): Observable<CurrencyConfig> {\r\n\r\n    return this.http.post<CurrencyConfig>(`${this.url}/api/fetch-all-currency`,formData)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n  // GET ALL\r\n  GetAllMarkups(params): Observable<Markups> {\r\n    return this.http.post<Markups>(`${this.url}/api/fetch-all-markups`, params)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n  // GET ALL\r\n  GetAllGroups(params): Observable<GroupSeasonality> {\r\n    return this.http.post<GroupSeasonality>(`${this.url}/api/fetch-all-sales`, params)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // Add Group/ Sale\r\n  AddGroup(params): Observable<GroupSeasonality> {\r\n    return this.http.post<GroupSeasonality>(`${this.url}/api/add-sale`, params)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  deleteGroup(id): Observable<GroupSeasonality> {\r\n    return this.http.post<GroupSeasonality>(`${this.url}/api/delete-sale/${id}`,{})\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // Add Markup\r\n  AddMarkup(params): Observable<Markups> {\r\n\r\n    return this.http.post<Markups>(`${this.url}/api/add-markup`, params)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n  deleteMarkup(id): Observable<GroupSeasonality> {\r\n    return this.http.post<GroupSeasonality>(`${this.url}/api/delete-markup/${id}`, {})\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  getEmailInfo(id: any): Observable<EmailTemplates> {\r\n    return this.http.get<EmailTemplates>(`${this.url}/api/fetch-email-template/${id}`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  updateTemplate(formData: EmailTemplates): Observable<EmailTemplates> {\r\n    return this.http.post<EmailTemplates>(`${this.url}/api/update-email-template`, formData)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  // Add New tourcode\r\n  addTourCodeSupplier(formData: any): Observable<AirlineDeals> {\r\n    return this.http.post<AirlineDeals>(`${this.url}/api/create-new-tourcode`, formData,\r\n      {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': \"application/json; charset=UTF-8\"\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  // Delete tour code user\r\n  deleteTourcode(data: any) {\r\n    return this.http.post(`${this.url}/api/remove-tourcode`,data,\r\n    {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': \"application/json; charset=UTF-8\"\r\n      })\r\n    });\r\n  }\r\n\r\n  //updating tour code user details\r\n  getUpdateTourCode(id: any, obj: any) {\r\n    return this.http.post(`${this.url}/api/update-tourcode/${id}`, obj);\r\n\r\n  }\r\n\r\n  //create new commission\r\n  addCommission(formData: any): Observable<AirlineCommission> {\r\n    return this.http.post<AirlineCommission>(`${this.url}/api/create-new-commission`, formData,\r\n      {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': \"application/json; charset=UTF-8\"\r\n        })\r\n      })\r\n  }\r\n\r\n  //update commission  details\r\n  getUpdateCommission(id: any, obj: any) {\r\n    return this.http.post(`${this.url}/api/update-commission/${id}`, obj);\r\n  }\r\n\r\n  //delete commission\r\n  deleteCommission(id: any) {\r\n    return this.http.delete(`${this.url}/api/remove-commission/${id}`);\r\n  }\r\n  \r\n  deleteCurrency(id:any){\r\n    return this.http.post(`${this.url}/api/remove-currency/${id}`,\"\");\r\n  }\r\n\r\n  addCurrency(formData: any):Observable<CurrencyConfig>{\r\n    return this.http.post<CurrencyConfig>(`${this.url}/api/create-new-currency`, formData,\r\n    {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': \"application/json; charset=UTF-8\"\r\n      })\r\n    })\r\n  }\r\n\r\n  getUpdateCurrency(id: any, obj: any){\r\n    return this.http.put(`${this.url}/api/update-currency/${id}`, obj);\r\n  }\r\n\r\n  //fetch all countries\r\n  GetAllCountries(){\r\n    return this.http.get(`${this.url}/api/get-country-list-db`)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandl)\r\n    )\r\n  }\r\n\r\n  //fetch supplier by id\r\n  getSupplier(id: any){\r\n    return this.http.get(`${this.url}/api/fetch-supplier/${id}`);\r\n  }\r\n\r\n  updateSupplier(id: any, obj: any){\r\n    return this.http.post(`${this.url}/api/update-supplier/${id}`, obj);\r\n  }\r\n\r\n  editGroup(params): Observable<GroupSeasonality> {\r\n    return this.http.post<GroupSeasonality>(`${this.url}/api/add-sale`, params)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  editMarkup(params): Observable<Markups> {\r\n    console.log(\"params---------\",params)\r\n    return this.http.post<Markups>(`${this.url}/api/add-markup`, params)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl)\r\n      )\r\n  }\r\n\r\n  searchMarkupByName(data:any){\r\n    return this.http.post(`${this.url}/api/search-markups`, data);\r\n  }\r\n\r\n  searchGroupByName(data){\r\n    return this.http.post(`${this.url}/api/search-sales` , data);\r\n  }\r\n\r\n  onStatusToggle(data:any){\r\n    return this.http.post(`${this.url}/api/toggle-status`, data);\r\n  }\r\n  \r\n  addAirlineRoutes(data:any){\r\n    return this.http.post(`${this.url}/api/create-new-routes`, data);\r\n  }\r\n\r\n  deleteAirlineRoutes(data:any){\r\n    return this.http.post(`${this.url}/api/remove-routes`, data);\r\n  }\r\n\r\n  getUpdateAirlineRoutes(obj: any){\r\n    return this.http.post(`${this.url}/api/update-routes`, obj);\r\n  }\r\n\r\n  fetchAllPointofSale(data) {\r\n    return this.http.post(`${this.url}/api/pos/fetch-pos`,data);\r\n  } \r\n  \r\n  getAllAirlineRoutes(page:any){\r\n    return this.http.post<AirlineRoutes>(`${this.url}/api/fetch-all-routes`,page)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandl)\r\n    )\r\n  }\r\n  // Error handling\r\n  errorHandl(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n}","export function convertToArray(value) {\r\n    let arr = [];\r\n    if (Array.isArray(value)) return value;\r\n    else arr.push(value);\r\n    return arr;\r\n  }\r\n"]}