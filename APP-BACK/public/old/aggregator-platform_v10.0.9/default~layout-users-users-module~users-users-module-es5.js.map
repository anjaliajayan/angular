{"version":3,"sources":["webpack:///src/app/layout/users/user-edit/user-edit.component.html","webpack:///src/app/layout/users/user-new/user-new.component.html","webpack:///src/app/layout/users/user-targets/user-targets.component.html","webpack:///src/app/layout/users/users.component.html","webpack:///src/app/layout/users/user-edit/user-edit.component.scss","webpack:///src/app/layout/users/user-edit/user-edit.component.ts","webpack:///src/app/layout/users/user-new/user-new.component.scss","webpack:///src/app/layout/users/user-new/user-new.component.ts","webpack:///src/app/layout/users/user-targets/user-targets.component.scss","webpack:///src/app/layout/users/user-targets/user-targets.component.ts","webpack:///src/app/layout/users/users-routing.module.ts","webpack:///src/app/layout/users/users.component.scss","webpack:///src/app/layout/users/users.component.ts","webpack:///src/app/layout/users/users.module.ts","webpack:///src/app/shared/services/user.service.ts"],"names":["UserEditComponent","activeRoute","router","_fb","userService","commonService","toastr","formIsSubmitted","displayTargets","displayPermissions","saluteNames","statusRow","userId","userData","userRoles","organizations","organizationBranches","branches","countries","editUserForm","createUserForm","snapshot","params","id","getUser","getCountries","getRoles","getOrganizations","$","document","ready","dropdown","invalid","buildError","data","salute","gfc","value","first_name","last_name","sex","gender","password","initial","mobile","contact","email","username","address_1","address1","address_2","address2","country_id","organisation_id","selected_permissions","skills","is_active","status","role_id","branch_id","updateUser","subscribe","r","success","disableTimeOut","progressBar","positionClass","msg","apiError","error","message","group","required","minLength","cpassword","validator","passwordMatchValidator","control","get","confirmPassword","setErrors","NoPassswordMatch","fetchUser","getOrgBranches","getCountryList","result","fetchRoles","fetchOrganizations","Organization","type","navigate","controls","selector","template","UserNewComponent","newUserForm","saluation","createUser","UserTargetsComponent","activatedRoute","yearsList","monthsList","Month","currentYear","Date","getFullYear","currentMonth","getMonth","userTargetForm","targets","array","createUserTargetForm","y","push","JSON","stringify","user_id","saveTargets","console","log","year","month","amount","name","routes","path","component","UsersRoutingModule","imports","forChild","exports","UsersComponent","users","offset","totalCount","offsetEvent","page","createSearchUserForm","usernameAndAgentCode","fetchUsers","total","searchUserForm","valid","search","corporate_type","nameAndOfficeId","navigateByUrl","UsersModule","declarations","UserService","http","apiUrl","serverURL","post","pipe","put","providedIn"],"mappings":"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","file":"default~layout-users-users-module~users-users-module-es5.js","sourcesContent":["export default \"<h3><span class=\\\"update-header\\\">Update User</span></h3>\\r\\n\\r\\n<div class=\\\"ui fluid container\\\">\\r\\n  <div class=\\\"eight wide field\\\"> </div>\\r\\n  <div class=\\\"eight wide field bookings_btn-panel text-right\\\">\\r\\n    <a class=\\\"ui primary button roleActionButton\\\" routerLink=\\\"../../\\\">\\r\\n      <span class=\\\"tourCode_text\\\">List Users</span>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"outer-basic\\\">\\r\\n\\r\\n    <div class=\\\"outer-basicForm\\\">\\r\\n      <div class=\\\"ui form\\\">\\r\\n\\r\\n        <div class=\\\"email-list b2c-list-user-table\\\">\\r\\n\\r\\n          <form [formGroup]=\\\"editUserForm\\\" (submit)=\\\"btnSubmitHandler()\\\">\\r\\n\\r\\n            <div class=\\\"ui grid\\\">\\r\\n              <div class=\\\"eleven wide column\\\">\\r\\n\\r\\n                <div class=\\\"shadow-sm p-5 mb-5 bg-white rounded\\\">\\r\\n\\r\\n                  <div class=\\\"ui grid\\\">\\r\\n                    <div class=\\\"three wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Salutation <small *ngIf=\\\"gfc.salute.errors\\\" class=\\\"text-danger\\\">Required.</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"salute\\\">  <!-- [selected]=\\\"salute==userData.salute\\\" -->\\r\\n                          <option *ngFor=\\\"let saluteName of saluteNames\\\" value=\\\"{{ saluteName }}\\\">{{ saluteName }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">First Name <small *ngIf=\\\"formIsSubmitted && gfc.first_name.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"first_name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Last Name <small *ngIf=\\\"formIsSubmitted && gfc.last_name.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <input type=\\\"text\\\" name=\\\"\\\" formControlName=\\\"last_name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"ui grid\\\">\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Contact Number <small *ngIf=\\\"formIsSubmitted && gfc.contact.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <input type=\\\"text\\\" id=\\\"\\\" formControlName=\\\"contact\\\" placeholder=\\\"Contact number\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Initial</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"\\\" formControlName=\\\"initial\\\" placeholder=\\\"Enter initial\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"four wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Gender <small *ngIf=\\\"formIsSubmitted && gfc.gender.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"gender\\\">\\r\\n                          <option value=\\\"male\\\">Male</option>\\r\\n                          <option value=\\\"female\\\">Female</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Status <small *ngIf=\\\"formIsSubmitted && gfc.status.errors\\\" class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"status\\\">\\r\\n                          <option *ngFor=\\\"let status of statusRow\\\" value=\\\"{{ status.id }}\\\">{{ status.value }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"inputAddress\\\">Address</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"inputAddress\\\" placeholder=\\\"1234 Main St\\\" formControlName=\\\"address1\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"inputAddress2\\\">Address 2</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Apartment, studio, or floor\\\"\\r\\n                          formControlName=\\\"address2\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Country <small *ngIf=\\\"formIsSubmitted && gfc.country_id.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"country_id\\\">\\r\\n                          <option value=\\\"\\\">Select</option>\\r\\n                          <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.country_id\\\">{{ country.name }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">POS <small *ngIf=\\\"formIsSubmitted && gfc.country_id.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"organisation_id\\\">\\r\\n                          <option value=\\\"\\\">Select</option>\\r\\n                          <option *ngFor=\\\"let organization of organizations\\\" [value]=\\\"organization.organisation_id\\\">\\r\\n                            {{ organization.name  }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">POS Branch<small *ngIf=\\\"formIsSubmitted && gfc.branch_id.errors\\\" class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"branch_id\\\">\\r\\n                          <option value=\\\"\\\">Select Branch</option>\\r\\n                          <option value=\\\"{{ organizationBranche.id }}\\\" *ngFor=\\\"let organizationBranche of organizationBranches\\\">{{ organizationBranche.name }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Role <small *ngIf=\\\"formIsSubmitted && gfc.role_id.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"role_id\\\">\\r\\n                          <option value=\\\"\\\">Select</option>\\r\\n                          <option *ngFor=\\\"let userRole of userRoles\\\" [value]=\\\"userRole.role_id\\\">{{ userRole.name }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"five wide column\\\">\\r\\n\\r\\n                <div class=\\\"ui grid\\\">\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Username <small *ngIf=\\\"formIsSubmitted && gfc.username.errors\\\"\\r\\n                          class=\\\"text-danger\\\">required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" formControlName=\\\"username\\\" placeholder=\\\"User name\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Email <small *ngIf=\\\"formIsSubmitted && gfc.email.errors\\\" class=\\\"text-danger\\\">a valid\\r\\n                          email is required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" formControlName=\\\"email\\\" placeholder=\\\"Email address\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Password <small *ngIf=\\\"formIsSubmitted && gfc.password.errors\\\"\\r\\n                          class=\\\"text-danger\\\">required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Confirm Password <small *ngIf=\\\"formIsSubmitted && gfc.cpassword.errors\\\"\\r\\n                          class=\\\"text-danger\\\">required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" placeholder=\\\"Password\\\" formControlName=\\\"cpassword\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"twelve wide column text-right\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"ui primary button\\\">Save User</button>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<h3><span class=\\\"update-header\\\">New User</span></h3>\\r\\n\\r\\n<div class=\\\"ui fluid container\\\">\\r\\n  <div class=\\\"eight wide field\\\"> </div>\\r\\n  <div class=\\\"eight wide field bookings_btn-panel text-right\\\">\\r\\n    <a class=\\\"ui primary button roleActionButton\\\" routerLink=\\\"../\\\">\\r\\n      <span class=\\\"tourCode_text\\\">List Users</span>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"outer-basic\\\">\\r\\n\\r\\n    <div class=\\\"outer-basicForm\\\">\\r\\n      <div class=\\\"ui form\\\">\\r\\n\\r\\n        <div class=\\\"email-list b2c-list-user-table\\\">\\r\\n\\r\\n          <form [formGroup]=\\\"newUserForm\\\" (submit)=\\\"btnSubmitHandler()\\\">\\r\\n\\r\\n            <div class=\\\"ui grid\\\">\\r\\n              <div class=\\\"eleven wide column\\\">\\r\\n\\r\\n                <div class=\\\"shadow-sm p-5 mb-5 bg-white rounded\\\">\\r\\n\\r\\n                  <div class=\\\"ui grid\\\">\\r\\n                    <div class=\\\"three wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Salutation <small *ngIf=\\\"gfc.saluation.errors\\\" class=\\\"text-danger\\\">Required.</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"saluation\\\">\\r\\n                          <option *ngFor=\\\"let saluteName of saluteNames\\\" value=\\\"{{ saluteName }}\\\">{{ saluteName }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">First Name <small *ngIf=\\\"formIsSubmitted && gfc.first_name.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"first_name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Last Name <small *ngIf=\\\"formIsSubmitted && gfc.last_name.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <input type=\\\"text\\\" name=\\\"\\\" formControlName=\\\"last_name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"ui grid\\\">\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Contact Number <small *ngIf=\\\"formIsSubmitted && gfc.contact.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <input type=\\\"text\\\" id=\\\"\\\" formControlName=\\\"contact\\\" placeholder=\\\"Contact number\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Initial</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"\\\" formControlName=\\\"initial\\\" placeholder=\\\"Enter initial\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"four wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Gender <small *ngIf=\\\"formIsSubmitted && gfc.gender.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"gender\\\">\\r\\n                          <option value=\\\"male\\\">Male</option>\\r\\n                          <option value=\\\"female\\\">Female</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Status <small *ngIf=\\\"formIsSubmitted && gfc.status.errors\\\" class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"status\\\">\\r\\n                          <option *ngFor=\\\"let status of statusRow\\\" value=\\\"{{ status.id }}\\\">{{ status.value }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"inputAddress\\\">Address</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"inputAddress\\\" placeholder=\\\"1234 Main St\\\" formControlName=\\\"address1\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"inputAddress2\\\">Address 2</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Apartment, studio, or floor\\\"\\r\\n                          formControlName=\\\"address2\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Country <small *ngIf=\\\"formIsSubmitted && gfc.country_id.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"country_id\\\">\\r\\n                          <option value=\\\"\\\">Select</option>\\r\\n                          <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.country_id\\\">{{ country.name }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">POS <small *ngIf=\\\"formIsSubmitted && gfc.country_id.errors\\\"\\r\\n                            class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"organisation_id\\\" (change)=\\\"getOrgBranches($event.target.value)\\\">\\r\\n                          <option value=\\\"\\\">Select</option>\\r\\n                          <option *ngFor=\\\"let organization of organizations\\\" [value]=\\\"organization.organisation_id\\\">\\r\\n                            {{ organization.name  }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"five wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">POS Branch<small *ngIf=\\\"formIsSubmitted && gfc.branch_id.errors\\\" class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"branch_id\\\">\\r\\n                          <option value=\\\"\\\">Select Branch</option>\\r\\n                          <option value=\\\"{{ organizationBranche.id }}\\\" *ngFor=\\\"let organizationBranche of organizationBranches\\\">{{ organizationBranche.name }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"six wide column\\\">\\r\\n                      <div class=\\\"field\\\">\\r\\n                        <label for=\\\"\\\">Role <small *ngIf=\\\"formIsSubmitted && gfc.role_id.errors\\\" class=\\\"text-danger\\\">required</small></label>\\r\\n                        <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"role_id\\\">\\r\\n                          <option value=\\\"\\\">Select</option>\\r\\n                          <option *ngFor=\\\"let userRole of userRoles\\\" [value]=\\\"userRole.role_id\\\">{{ userRole.name }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"five wide column\\\">\\r\\n\\r\\n                <div class=\\\"ui grid\\\">\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Username <small *ngIf=\\\"formIsSubmitted && gfc.username.errors\\\"\\r\\n                          class=\\\"text-danger\\\">required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" formControlName=\\\"username\\\" placeholder=\\\"User name\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Email <small *ngIf=\\\"formIsSubmitted && gfc.email.errors\\\" class=\\\"text-danger\\\">a valid\\r\\n                          email is required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" formControlName=\\\"email\\\" placeholder=\\\"Email address\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Password <small *ngIf=\\\"formIsSubmitted && gfc.password.errors\\\"\\r\\n                          class=\\\"text-danger\\\">required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"twelve wide column\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                      <label for=\\\"\\\">Confirm Password <small *ngIf=\\\"formIsSubmitted && gfc.cpassword.errors\\\"\\r\\n                          class=\\\"text-danger\\\">required</small></label>\\r\\n                      <input type=\\\"email\\\" id=\\\"\\\" placeholder=\\\"Password\\\" formControlName=\\\"cpassword\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- <div class=\\\"twelve wide column text-right\\\">\\r\\n                  </div> -->\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"btn-wrapper\\\">\\r\\n             <button type=\\\"submit\\\" class=\\\"ui primary button\\\">Save User</button>\\r\\n            </div>\\r\\n          </form>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<h3><span class=\\\"update-header\\\">Set User Targets</span></h3>\\r\\n\\r\\n<div class=\\\"ui fluid container\\\">\\r\\n  <div class=\\\"eight wide field\\\"> </div>\\r\\n  <div class=\\\"eight wide field bookings_btn-panel text-right\\\">\\r\\n    <a class=\\\"ui primary button roleActionButton\\\" routerLink=\\\"../../\\\"><span class=\\\"tourCode_text\\\">List Users</span></a>\\r\\n  </div>\\r\\n<div class=\\\"outer-basic\\\">\\r\\n\\r\\n  <div class=\\\"outer-basicForm\\\">\\r\\n    <div class=\\\"ui form\\\">\\r\\n\\r\\n      <div class=\\\"email-list b2c-list-user-table\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"userTargetForm\\\">\\r\\n\\r\\n          <div class=\\\"ui grid\\\">\\r\\n            <div class=\\\"sixteen wide column\\\" formArrayName=\\\"targets\\\" *ngFor=\\\"let item of userTargetForm.get['targets'].controls; let i = index;\\\">\\r\\n              \\r\\n              <div class=\\\"ui grid\\\" [formGroupName]=\\\"i\\\">\\r\\n\\r\\n                <div class=\\\"three wide column\\\">\\r\\n                  <div class=\\\"field\\\">\\r\\n                    <label for=\\\"inputAddress2\\\">Year</label>\\r\\n                    <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"year\\\" name='year'>\\r\\n                      <option *ngFor=\\\"let year of yearsList;\\\" [value]=\\\"year\\\">{{ year }}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"three wide column\\\">\\r\\n                  <div class=\\\"field\\\">\\r\\n                    <label for=\\\"inputAddress2\\\">Month</label>\\r\\n                    <select class=\\\"ui dropdown fluid\\\" formControlName=\\\"month\\\" name=\\\"month\\\">\\r\\n                      <option *ngFor=\\\"let month of monthsList;\\\" [value]=\\\"month.id\\\">{{ month.name }}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"three wide column\\\">\\r\\n                  <div class=\\\"field\\\">\\r\\n                    <label for=\\\"inputAddress2\\\">Target Amount</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"ui dropdown fluid\\\" placeholder=\\\"Target Amount\\\" formControlName=\\\"amount\\\" name=\\\"amount\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"four wide column\\\">\\r\\n                  <br>\\r\\n                  <button (click)=\\\"btnAddTarget()\\\" class=\\\"ui button \\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui grid\\\">\\r\\n            <div class=\\\"ten wide column text-right\\\">\\r\\n              <button type=\\\"button\\\" (click)=\\\"btnSubmitHandler()\\\" class=\\\"ui button primary\\\">Save Targets</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h3><span class=\\\"update-header\\\">List of Users</span></h3>\\r\\n\\r\\n<!-- organizationTypes -->\\r\\n<div class=\\\"ui fluid container\\\">\\r\\n  <div class=\\\"outer-basic\\\">\\r\\n    <div class=\\\"outer-basicForm\\\">\\r\\n      <form (ngSubmit)=\\\"searchFormSubmit()\\\" class=\\\"ui form search-field-wrapper\\\" [formGroup]=\\\"searchUserForm\\\">\\r\\n        <div class=\\\"four fields\\\">\\r\\n          <div class=\\\"two wide field\\\">\\r\\n            <select class=\\\"ui fluid dropdown\\\" formControlName=\\\"corporate_type\\\">\\r\\n              <option value=\\\"all\\\">All</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"three wide field\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Office Name/Office Id\\\" formControlName=\\\"nameAndOfficeId\\\">\\r\\n            <small *ngIf=\\\"formIsSubmitted && gfc.nameAndOfficeId.errors\\\" class=\\\"text-danger\\\">required</small>\\r\\n          </div>\\r\\n          <div class=\\\"eight wide field\\\">\\r\\n            <button class=\\\"ui button filter_btn\\\">\\r\\n              <span class=\\\"filter_list\\\">Search</span>\\r\\n            </button>\\r\\n            <button class=\\\"ui button filter_btn_reset\\\" (click)=\\\"searchUserForm.reset({})\\\">\\r\\n              <span class=\\\"filter_list\\\">Reset</span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <div class=\\\"text-right mb-1\\\">\\r\\n        <button (click)=\\\"addNewUser()\\\" class=\\\"ui button primary\\\">Add new User</button>\\r\\n      </div>\\r\\n      \\r\\n\\r\\n      <table class=\\\"ui celled table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Organisation</th>\\r\\n            <th>Role</th>\\r\\n            <th>Name</th>\\r\\n            <th>Email</th>\\r\\n            <th>Contact Info</th>\\r\\n            <th width=\\\"120\\\">&nbsp;</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tr *ngFor=\\\"let user of users; let i = index\\\">\\r\\n          <td>{{ user.organisation ? user.organisation.name : null }}</td>\\r\\n          <td>\\r\\n            <span *ngIf=\\\"user.admin\\\">Admin</span>\\r\\n            <span *ngIf=\\\"user.agent\\\">Agent</span>\\r\\n          </td>\\r\\n          <td>{{ user.first_name }} {{ user.last_name }}</td>\\r\\n          <td>{{ user.email }}</td>\\r\\n          <td>{{ user.mobile }}</td>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            \\r\\n            <div class=\\\"ui buttons\\\">\\r\\n              <a [routerLink]=\\\"['edit', user.users_id]\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"ui button\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\r\\n              <a class=\\\"ui button\\\" [routerLink]=\\\"['targets', user.users_id]\\\" routerLinkActive=\\\"router-link-active\\\"><i class=\\\"fa fa-dollar\\\"></i></a>\\r\\n              <button class=\\\"ui button\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n            </div>\\r\\n            \\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \".update-header {\\n  color: #4F4F4F;\\n  font-size: 20px;\\n  font-weight: 200;\\n  line-height: 22px;\\n  margin-left: 30px;\\n}\\n\\n.ui.fluid.container {\\n  padding: 25px;\\n}\\n\\n.outer-basic {\\n  background-color: #FFF;\\n  box-shadow: 3px 1px 4px 0 rgba(0, 0, 0, 0.4);\\n  border-radius: 20px;\\n}\\n\\n.outer-basicForm {\\n  width: 100%;\\n  height: auto;\\n  padding: 50px;\\n}\\n\\n.filter_btn {\\n  border-radius: 3px;\\n  background-color: #3867B1;\\n  box-shadow: inset 0 1px 34px 0 rgba(0, 0, 0, 0.5), 0 1px 1px 0 rgba(0, 0, 0, 0.5);\\n}\\n\\n.filter_btn_reset {\\n  border-radius: 3px;\\n  background-color: #4F4F4F;\\n  box-shadow: inset 0 1px 34px 0 rgba(0, 0, 0, 0.5), 0 1px 1px 0 rgba(0, 0, 0, 0.5);\\n}\\n\\n.filter_list {\\n  color: #FFF;\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500;\\n  line-height: 15px;\\n  text-align: center;\\n}\\n\\n.icon {\\n  opacity: 1;\\n  z-index: 100;\\n}\\n\\n.icon .corporate_input__placeholder-icon {\\n  width: 24px;\\n  margin-top: 6px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.cal {\\n  width: 0px;\\n  margin-top: 10px;\\n  font-size: 13px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.call {\\n  width: 15px;\\n  margin-top: 10px;\\n  margin-left: 7px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.calll {\\n  width: 20px;\\n  margin-top: 10px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.ico {\\n  width: 15px;\\n  margin-top: 10px;\\n}\\n\\n.search-field-wrapper {\\n  padding-bottom: 32px;\\n}\\n\\n.text-danger {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItZWRpdC9FOlxcQmVsYWxcXHByb2plY3RzXFxhZ2dyZWdhdG9yLWZyb250ZW5kL3NyY1xcYXBwXFxsYXlvdXRcXHVzZXJzXFx1c2VyLWVkaXRcXHVzZXItZWRpdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItZWRpdC91c2VyLWVkaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSw0Q0FBQTtFQUNBLG1CQUFBO0FDQ0o7O0FERUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxpRkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSx5QkFBQTtFQUNBLGlGQUFBO0FDQ0o7O0FERUE7RUFDSSxXQUFBO0VBQ0EsaUNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxVQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREFJO0VBQ0ksV0FBQTtFQUNBLGVBQUE7QUNFUjs7QUREUTtFQUNJLFVBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUNHWjs7QUREUTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDR1o7O0FERFE7RUFDSSxXQUFBO0VBQ0EsZ0JBQUE7QUNHWjs7QUREUTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtBQ0daOztBREVBO0VBQ0ksb0JBQUE7QUNDSjs7QURHQTtFQUNJLFVBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC91c2Vycy91c2VyLWVkaXQvdXNlci1lZGl0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVwZGF0ZS1oZWFkZXIge1xyXG4gICAgY29sb3I6ICM0RjRGNEY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLnVpLmZsdWlkLmNvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAyNXB4O1xyXG59XHJcblxyXG4ub3V0ZXItYmFzaWMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgIGJveC1zaGFkb3c6IDNweCAxcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxufVxyXG5cclxuLm91dGVyLWJhc2ljRm9ybSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHBhZGRpbmc6IDUwcHg7XHJcbn1cclxuXHJcbi5maWx0ZXJfYnRuIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzODY3QjE7XHJcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAzNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjUpLCAwIDFweCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbn1cclxuXHJcbi5maWx0ZXJfYnRuX3Jlc2V0IHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0RjRGNEY7XHJcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAzNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjUpLCAwIDFweCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbn1cclxuXHJcbi5maWx0ZXJfbGlzdCB7XHJcbiAgICBjb2xvcjogI0ZGRjtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBsaW5lLWhlaWdodDogMTVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmljb24ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHotaW5kZXg6IDEwMDtcclxuICAgIC5jb3Jwb3JhdGVfaW5wdXRfX3BsYWNlaG9sZGVyLWljb24ge1xyXG4gICAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDZweDtcclxuICAgICAgICAmLmNhbCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi5jYWxsIHtcclxuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA3cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYuY2FsbGwge1xyXG4gICAgICAgICAgICB3aWR0aDogMjBweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi5pY28ge1xyXG4gICAgICAgICAgICB3aWR0aDogMTVweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZWFyY2gtZmllbGQtd3JhcHBlciB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMzJweDtcclxufVxyXG5cclxuXHJcbi50ZXh0LWRhbmdlciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59IiwiLnVwZGF0ZS1oZWFkZXIge1xuICBjb2xvcjogIzRGNEY0RjtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG59XG5cbi51aS5mbHVpZC5jb250YWluZXIge1xuICBwYWRkaW5nOiAyNXB4O1xufVxuXG4ub3V0ZXItYmFzaWMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xuICBib3gtc2hhZG93OiAzcHggMXB4IDRweCAwIHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbn1cblxuLm91dGVyLWJhc2ljRm9ybSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHBhZGRpbmc6IDUwcHg7XG59XG5cbi5maWx0ZXJfYnRuIHtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzg2N0IxO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAzNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjUpLCAwIDFweCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbi5maWx0ZXJfYnRuX3Jlc2V0IHtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEY0RjRGO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAzNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjUpLCAwIDFweCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbi5maWx0ZXJfbGlzdCB7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMTVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaWNvbiB7XG4gIG9wYWNpdHk6IDE7XG4gIHotaW5kZXg6IDEwMDtcbn1cbi5pY29uIC5jb3Jwb3JhdGVfaW5wdXRfX3BsYWNlaG9sZGVyLWljb24ge1xuICB3aWR0aDogMjRweDtcbiAgbWFyZ2luLXRvcDogNnB4O1xufVxuLmljb24gLmNvcnBvcmF0ZV9pbnB1dF9fcGxhY2Vob2xkZXItaWNvbi5jYWwge1xuICB3aWR0aDogMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBmb250LXNpemU6IDEzcHg7XG59XG4uaWNvbiAuY29ycG9yYXRlX2lucHV0X19wbGFjZWhvbGRlci1pY29uLmNhbGwge1xuICB3aWR0aDogMTVweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDdweDtcbn1cbi5pY29uIC5jb3Jwb3JhdGVfaW5wdXRfX3BsYWNlaG9sZGVyLWljb24uY2FsbGwge1xuICB3aWR0aDogMjBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cbi5pY29uIC5jb3Jwb3JhdGVfaW5wdXRfX3BsYWNlaG9sZGVyLWljb24uaWNvIHtcbiAgd2lkdGg6IDE1cHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5zZWFyY2gtZmllbGQtd3JhcHBlciB7XG4gIHBhZGRpbmctYm90dG9tOiAzMnB4O1xufVxuXG4udGV4dC1kYW5nZXIge1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { UserService } from '../../../shared/services/user.service';\r\nimport { CommonService } from 'src/app/shared/services/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { saluteNames, statusRow } from '../../../shared/utils/common';\r\n\r\ndeclare const moment: any;\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.scss']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n  editUserForm: FormGroup\r\n\r\n  formIsSubmitted: boolean = false;\r\n  displayTargets: boolean = false;\r\n  displayPermissions: boolean = false;\r\n  saluteNames: any = saluteNames;\r\n  statusRow: any = statusRow;\r\n\r\n  userId: Number = 0;\r\n  userData: any = {};\r\n  userRoles: any = [];\r\n  organizations: any = [];\r\n  organizationBranches: any = [];\r\n  branches: any = [];\r\n  countries: any = [];\r\n\r\n  constructor(private activeRoute: ActivatedRoute, private router: Router, private _fb: FormBuilder, private userService: UserService, private commonService: CommonService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.editUserForm = this.createUserForm(null);\r\n    this.userId = this.activeRoute.snapshot.params.id;\r\n    this.getUser(this.userId);\r\n    this.getCountries();    \r\n    this.getRoles();\r\n    this.getOrganizations();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    $(document).ready(function(){\r\n      (<any>$('.ui.dropdown')).dropdown();\r\n    });\r\n  }\r\n\r\n  btnSubmitHandler() {\r\n    this.formIsSubmitted = true;\r\n\r\n    if (this.editUserForm.invalid) {\r\n      this.buildError('Please fill all the required fields.');\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      id: this.userId,\r\n      salute: this.gfc.salute.value,\r\n      first_name: this.gfc.first_name.value,\r\n      last_name: this.gfc.last_name.value,\r\n      sex: this.gfc.gender.value,\r\n      password: this.gfc.password.value,\r\n      initial: this.gfc.initial.value,\r\n      mobile: this.gfc.contact.value,\r\n      email: this.gfc.email.value,\r\n      username: this.gfc.username.value,\r\n      address_1: this.gfc.address1.value,\r\n      address_2: this.gfc.address2.value,\r\n      country_id: this.gfc.country_id.value,\r\n      organisation_id: this.gfc.organisation_id.value || 0,\r\n      selected_permissions: '',\r\n      skills: '',\r\n      is_active: this.gfc.status.value,\r\n      role_id: this.gfc.role_id.value,\r\n      branch_id: this.gfc.branch_id.value,\r\n    };\r\n\r\n    this.userService.updateUser(data).subscribe(r => {\r\n      if (r.status == 200) {\r\n        this.displayTargets = true;\r\n        this.userData = r.data;\r\n        this.formIsSubmitted = false;\r\n        \r\n        this.toastr.success('Profile updated successfully.', 'Success !', {\r\n          disableTimeOut: false,\r\n          progressBar: false,\r\n          positionClass: 'toast-bottom-right'\r\n        });\r\n      }\r\n      else {\r\n        this.buildError(r.msg)\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message)\r\n    });\r\n\r\n  }\r\n\r\n  createUserForm(userData) {\r\n    return this._fb.group({\r\n      salute: [userData ? userData.salute : null, Validators.required], // this.saluteNames[userData.salute]\r\n      first_name: [userData ? userData.first_name : null, Validators.required],\r\n      last_name: [userData ? userData.last_name : null, Validators.required],\r\n      role_id: [userData ? userData.role_id : null, Validators.required],\r\n      contact: [userData ? userData.mobile : null, Validators.required],\r\n      initial: [userData ? userData.initial: null],\r\n      gender: [userData ? userData.sex : null, Validators.required],\r\n      status: [userData ? userData.is_active : null, Validators.required],\r\n      address1: [userData ? userData.address_1: null],\r\n      address2: [userData ? userData.address_2: null],\r\n      country_id: [userData ? userData.country_id : null, Validators.required],\r\n      organisation_id: [userData ? userData.organisation_id: null],\r\n      branch_id: [userData ? userData.branch_id: null],\r\n      username: [userData ? userData.username : null, Validators.required],\r\n      email: [userData ? userData.email: null, [Validators.required, Validators.email]],\r\n      password: [null, [Validators.minLength(6)]],\r\n      cpassword: [null, ],\r\n    }, {\r\n      validator: this.passwordMatchValidator\r\n    });\r\n  }\r\n\r\n\r\n  get gfc() { return this.editUserForm.controls };\r\n\r\n  passwordMatchValidator(control: AbstractControl) {\r\n    const password: string = control.get('password').value; // get password from our password form control\r\n    const confirmPassword: string = control.get('cpassword').value; // get password from our confirmPassword form control\r\n    // compare is the password math\r\n    if (password !== confirmPassword) {\r\n      // if they don't match, set an error in our confirmPassword form control\r\n      control.get('cpassword').setErrors({ NoPassswordMatch: true });\r\n    }\r\n  }\r\n\r\n  buildError(message) {\r\n    this.toastr.error(message, 'Server Error !', {\r\n      disableTimeOut: false,\r\n      progressBar: false,\r\n      positionClass: 'toast-bottom-right'\r\n    });\r\n  }\r\n\r\n  getUser(userId) {\r\n  \r\n    this.userService.fetchUser(userId).subscribe(r => {\r\n      if (r.status == 200) {\r\n        this.userData = r.data;\r\n        \r\n        this.getOrgBranches(this.userData.organisation_id);\r\n\r\n        this.editUserForm = this.createUserForm(this.userData);\r\n        // console.log(this.userData)\r\n      }\r\n      else {\r\n        this.buildError(r.msg)\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message)\r\n    });\r\n  }\r\n\r\n  getCountries() {\r\n    this.commonService.getCountryList().subscribe((result: any) => {\r\n      this.countries = result.countries;\r\n    });\r\n  }\r\n\r\n  getRoles() {\r\n    this.userService.fetchRoles().subscribe(r => {\r\n      if (r.status == 200) {\r\n        this.userRoles = r.data;\r\n      }\r\n      else {\r\n        this.buildError(r.msg)\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message)\r\n    });\r\n  }\r\n\r\n  getOrganizations() {\r\n    this.userService.fetchOrganizations().subscribe(r => {\r\n      if (r.status == 200) {\r\n        // console.log(r.Organization);\r\n\r\n        // r.Organization.forEach( org => {\r\n        //   this.organizations.push(org);\r\n\r\n        //   org.branches.forEach( (branch, i) => {\r\n        //     this.branches[org.organisation_id].push(branch);\r\n        //   })\r\n\r\n        // })\r\n        this.organizations = r.Organization;\r\n      }\r\n      else {\r\n        this.buildError(r.msg)\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message)\r\n    });\r\n  }\r\n\r\n  getOrgBranches(id) {\r\n    this.organizationBranches = null;\r\n    \r\n    this.commonService.getOrgBranches(id).subscribe((r:any) => {\r\n      if( r.type == 'data' ) {\r\n          this.organizationBranches = r.Organization;\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  loadTargets() {\r\n    this.router.navigate(['users/targets', this.userId]);\r\n  }\r\n  loadPermission() {\r\n    this.router.navigate(['users/permissions', this.userId]);\r\n  }\r\n\r\n\r\n}","export default \".update-header {\\n  color: #4F4F4F;\\n  font-size: 20px;\\n  font-weight: 200;\\n  line-height: 22px;\\n  margin-left: 30px;\\n}\\n\\n.ui.fluid.container {\\n  padding: 25px;\\n}\\n\\n.outer-basic {\\n  background-color: #FFF;\\n  box-shadow: 3px 1px 4px 0 rgba(0, 0, 0, 0.4);\\n  border-radius: 20px;\\n}\\n\\n.outer-basicForm {\\n  width: 100%;\\n  height: auto;\\n  padding: 30px 15px 8px;\\n}\\n\\n.basic-header {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n}\\n\\n.text-danger {\\n  color: red;\\n}\\n\\n.ui.primary.roleActionButton.button {\\n  position: relative;\\n  top: -40px;\\n}\\n\\n.btn-wrapper {\\n  text-align: right;\\n  margin-top: 24px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItbmV3L0U6XFxCZWxhbFxccHJvamVjdHNcXGFnZ3JlZ2F0b3ItZnJvbnRlbmQvc3JjXFxhcHBcXGxheW91dFxcdXNlcnNcXHVzZXItbmV3XFx1c2VyLW5ldy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItbmV3L3VzZXItbmV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGFBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsNENBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtBQ0NKOztBREVBO0VBQ0ksaUNBQUE7QUNDSjs7QURFQTtFQUNJLFVBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtBQ0NKOztBREVBO0VBQ0ksaUJBQUE7RUFDQSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItbmV3L3VzZXItbmV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVwZGF0ZS1oZWFkZXIge1xyXG4gICAgY29sb3I6ICM0RjRGNEY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLnVpLmZsdWlkLmNvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAyNXB4O1xyXG59XHJcblxyXG4ub3V0ZXItYmFzaWMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgIGJveC1zaGFkb3c6IDNweCAxcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxufVxyXG5cclxuLm91dGVyLWJhc2ljRm9ybSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHBhZGRpbmc6IDMwcHggMTVweCA4cHg7XHJcbn1cclxuXHJcbi5iYXNpYy1oZWFkZXIge1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4udGV4dC1kYW5nZXIge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLnVpLnByaW1hcnkucm9sZUFjdGlvbkJ1dHRvbi5idXR0b24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtNDBweDtcclxufVxyXG5cclxuLmJ0bi13cmFwcGVyIHtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgbWFyZ2luLXRvcDogMjRweDtcclxufSIsIi51cGRhdGUtaGVhZGVyIHtcbiAgY29sb3I6ICM0RjRGNEY7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xufVxuXG4udWkuZmx1aWQuY29udGFpbmVyIHtcbiAgcGFkZGluZzogMjVweDtcbn1cblxuLm91dGVyLWJhc2ljIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcbiAgYm94LXNoYWRvdzogM3B4IDFweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG5cbi5vdXRlci1iYXNpY0Zvcm0ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBwYWRkaW5nOiAzMHB4IDE1cHggOHB4O1xufVxuXG4uYmFzaWMtaGVhZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG59XG5cbi50ZXh0LWRhbmdlciB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi51aS5wcmltYXJ5LnJvbGVBY3Rpb25CdXR0b24uYnV0dG9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC00MHB4O1xufVxuXG4uYnRuLXdyYXBwZXIge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgbWFyZ2luLXRvcDogMjRweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { UserService } from '../../../shared/services/user.service';\r\nimport { CommonService } from 'src/app/shared/services/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { saluteNames, statusRow } from '../../../shared/utils/common';\r\n\r\n// import * as $ from 'jquery';\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-user-new',\r\n  templateUrl: './user-new.component.html',\r\n  styleUrls: ['./user-new.component.scss']\r\n})\r\n\r\nexport class UserNewComponent implements OnInit {\r\n\r\n  newUserForm: FormGroup\r\n\r\n  userRoles: any = [];\r\n  organizations: any = [];\r\n  organizationBranches: any = [];\r\n  countries: any = [];\r\n  formIsSubmitted: boolean = false;\r\n  saluteNames: any = saluteNames;\r\n  statusRow: any = statusRow;\r\n\r\n  constructor(private router: Router, private _fb: FormBuilder, private userService: UserService, private commonService: CommonService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.newUserForm = this.createUserForm();\r\n\r\n    this.getCountries();    \r\n    this.getRoles();\r\n    this.getOrganizations();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    $(document).ready(function(){\r\n      <any>($('.ui.dropdown')).dropdown();\r\n    });\r\n  }\r\n\r\n  btnSubmitHandler() {\r\n    this.formIsSubmitted = true;\r\n\r\n    if (this.newUserForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      salute: this.gfc.saluation.value,\r\n      first_name: this.gfc.first_name.value,\r\n      last_name: this.gfc.last_name.value,\r\n      sex: this.gfc.gender.value,\r\n      password: this.gfc.password.value,\r\n      initial: this.gfc.initial.value,\r\n      mobile: this.gfc.contact.value,\r\n      email: this.gfc.email.value,\r\n      username: this.gfc.username.value,\r\n      address_1: this.gfc.address1.value,\r\n      address_2: this.gfc.address2.value,\r\n      country_id: this.gfc.country_id.value,\r\n      organisation_id: this.gfc.organisation_id.value || 0,\r\n      selected_permissions: '',\r\n      skills: '',\r\n      is_active: this.gfc.status.value,\r\n      role_id: this.gfc.role_id.value,\r\n      branch_id: this.gfc.branch_id.value,\r\n    };\r\n\r\n    this.userService.createUser(data).subscribe(r => {\r\n      if (r.status == 200) {\r\n        this.toastr.success(r.msg, 'Server Error !', {\r\n          disableTimeOut: false,\r\n          progressBar: false,\r\n          positionClass: 'toast-bottom-right'\r\n        });\r\n        this.formIsSubmitted = false;\r\n        this.router.navigate(['users']);\r\n      }\r\n      else {\r\n        this.buildError(r.msg);\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message);\r\n    });\r\n\r\n  }\r\n\r\n  createUserForm() {\r\n    return this._fb.group({\r\n      saluation: ['Mr.', Validators.required],\r\n      first_name: [null, Validators.required],\r\n      last_name: [null, Validators.required],\r\n      role_id: ['', Validators.required],\r\n      contact: [null, Validators.required],\r\n      initial: [null],\r\n      gender: ['male', Validators.required],\r\n      status: [1, Validators.required],\r\n      address1: [null],\r\n      address2: [null],\r\n      country_id: ['', Validators.required],\r\n      organisation_id: ['', null],\r\n      username: [null, Validators.required],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      password: [null, [Validators.required, Validators.minLength(6)]],\r\n      cpassword: [null, Validators.required],\r\n      branch_id: [null],\r\n    }, {\r\n      validator: this.passwordMatchValidator\r\n    });\r\n  }\r\n\r\n\r\n  get gfc() { return this.newUserForm.controls };\r\n\r\n  passwordMatchValidator(control: AbstractControl) {\r\n    const password: string = control.get('password').value; // get password from our password form control\r\n    const confirmPassword: string = control.get('cpassword').value; // get password from our confirmPassword form control\r\n    // compare is the password math\r\n    if (password !== confirmPassword) {\r\n      // if they don't match, set an error in our confirmPassword form control\r\n      control.get('cpassword').setErrors({ NoPassswordMatch: true });\r\n    }\r\n  }\r\n\r\n  getCountries() {\r\n    this.commonService.getCountryList().subscribe((result: any) => {\r\n      this.countries = result.countries;\r\n    });\r\n  }\r\n\r\n  getRoles() {\r\n    this.userService.fetchRoles().subscribe(r => {\r\n      if (r.status == 200) {\r\n        this.userRoles = r.data;\r\n      }\r\n      else {\r\n        this.buildError(r.msg)\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message)\r\n    });\r\n  }\r\n\r\n  getOrganizations() {\r\n    this.userService.fetchOrganizations().subscribe(r => {\r\n      if (r.status == 200) {\r\n        this.organizations = r.Organization;\r\n      }\r\n      else {\r\n        this.buildError(r.msg)\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message)\r\n    });\r\n  }\r\n\r\n  getOrgBranches(id) {\r\n    this.organizationBranches = null;\r\n    \r\n    this.commonService.getOrgBranches(id).subscribe((r:any) => {\r\n      if( r.type == 'data' ) {\r\n          this.organizationBranches = r.Organization;\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n\r\n  buildError(message) {\r\n    this.toastr.error(message, 'Server Error !', {\r\n      disableTimeOut: false,\r\n      progressBar: false,\r\n      positionClass: 'toast-bottom-right'\r\n    });\r\n  }\r\n}\r\n","export default \".update-header {\\n  color: #4F4F4F;\\n  font-size: 20px;\\n  font-weight: 200;\\n  line-height: 22px;\\n  margin-left: 30px;\\n}\\n\\n.ui.fluid.container {\\n  padding: 25px;\\n}\\n\\n.outer-basic {\\n  background-color: #FFF;\\n  box-shadow: 3px 1px 4px 0 rgba(0, 0, 0, 0.4);\\n  border-radius: 20px;\\n}\\n\\n.outer-basicForm {\\n  width: 100%;\\n  height: auto;\\n  padding: 30px 15px;\\n}\\n\\n.basic-header {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n}\\n\\n.text-danger {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItdGFyZ2V0cy9FOlxcQmVsYWxcXHByb2plY3RzXFxhZ2dyZWdhdG9yLWZyb250ZW5kL3NyY1xcYXBwXFxsYXlvdXRcXHVzZXJzXFx1c2VyLXRhcmdldHNcXHVzZXItdGFyZ2V0cy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItdGFyZ2V0cy91c2VyLXRhcmdldHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSw0Q0FBQTtFQUNBLG1CQUFBO0FDQ0o7O0FERUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxpQ0FBQTtBQ0NKOztBREVBO0VBQ0ksVUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXItdGFyZ2V0cy91c2VyLXRhcmdldHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBkYXRlLWhlYWRlciB7XHJcbiAgICBjb2xvcjogIzRGNEY0RjtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiAyMDA7XHJcbiAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG59XHJcblxyXG4udWkuZmx1aWQuY29udGFpbmVyIHtcclxuICAgIHBhZGRpbmc6IDI1cHg7XHJcbn1cclxuXHJcbi5vdXRlci1iYXNpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgYm94LXNoYWRvdzogM3B4IDFweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG59XHJcblxyXG4ub3V0ZXItYmFzaWNGb3JtIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgcGFkZGluZzogMzBweCAxNXB4O1xyXG59XHJcblxyXG4uYmFzaWMtaGVhZGVyIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuLnRleHQtZGFuZ2VyIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn0iLCIudXBkYXRlLWhlYWRlciB7XG4gIGNvbG9yOiAjNEY0RjRGO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxuLnVpLmZsdWlkLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDI1cHg7XG59XG5cbi5vdXRlci1iYXNpYyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XG4gIGJveC1zaGFkb3c6IDNweCAxcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xufVxuXG4ub3V0ZXItYmFzaWNGb3JtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgcGFkZGluZzogMzBweCAxNXB4O1xufVxuXG4uYmFzaWMtaGVhZGVyIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG59XG5cbi50ZXh0LWRhbmdlciB7XG4gIGNvbG9yOiByZWQ7XG59Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserService } from '../../../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-targets',\r\n  templateUrl: './user-targets.component.html',\r\n  styleUrls: ['./user-targets.component.scss']\r\n})\r\nexport class UserTargetsComponent implements OnInit {\r\n\r\n  userTargetForm: FormGroup;\r\n\r\n  targets: FormArray;\r\n  yearsList = [];\r\n  monthsList = [\r\n    new Month(1, 'January'),\r\n    new Month(2, 'February'),\r\n    new Month(3, 'March'),\r\n    new Month(4, 'April'),\r\n    new Month(5, 'May'),\r\n    new Month(6, 'June'),\r\n    new Month(7, 'July'),\r\n    new Month(8, 'August'),\r\n    new Month(9, 'September'),\r\n    new Month(10, 'October'),\r\n    new Month(11, 'November'),\r\n    new Month(12, 'December')\r\n  ];\r\n\r\n  currentYear = new Date().getFullYear();\r\n  currentMonth = new Date().getMonth() + 1;\r\n\r\n  constructor(private _fb: FormBuilder, private userService: UserService, private toastr: ToastrService, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\r\n    this.userTargetForm = this._fb.group({\r\n      targets: this._fb.array([this.createUserTargetForm()])\r\n    })\r\n\r\n    for (let y = this.currentYear; y <= (this.currentYear + 5); y++) {\r\n      this.yearsList.push(y);\r\n    }\r\n  }\r\n\r\n  btnSubmitHandler() {\r\n    const targets = JSON.stringify({\r\n      user_id: this.activatedRoute.snapshot.params.id,\r\n      targets: this.userTargetForm.value.targets\r\n    });\r\n\r\n    this.userService.saveTargets(targets).subscribe( r => {\r\n      if( r.status ) {\r\n        this.toastr.success(r.message, 'Success !', {\r\n          disableTimeOut: false,\r\n          progressBar: false,\r\n          positionClass: 'toast-bottom-right'\r\n        });\r\n      }\r\n      else {\r\n        this.buildError(r.msg)\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.buildError(apiError.error.message)\r\n    });\r\n\r\n    console.log(targets);\r\n    return false;\r\n  }\r\n\r\n  createUserTargetForm(): FormGroup {\r\n    return this._fb.group({\r\n      year: [this.currentYear, Validators.required],\r\n      month: [this.currentMonth, Validators.required],\r\n      amount: [500, Validators.required],\r\n    });\r\n  }\r\n\r\n  btnAddTarget(): void {\r\n    this.targets = this.userTargetForm.get('targets') as FormArray;\r\n    this.targets.push(this.createUserTargetForm());\r\n  }\r\n  get gfc() { return this.userTargetForm.controls };\r\n\r\n  buildError(message) {\r\n    this.toastr.error(message, 'Server Error !', {\r\n      disableTimeOut: false,\r\n      progressBar: false,\r\n      positionClass: 'toast-bottom-right'\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class Month {\r\n  constructor(public id: number, public name: string) { }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UsersComponent } from './users.component';\r\nimport { UserNewComponent } from './user-new/user-new.component';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserTargetsComponent } from './user-targets/user-targets.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UsersComponent,\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: UserNewComponent,\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: UserEditComponent,\r\n  },\r\n  {\r\n    path: 'targets/:id',\r\n    component: UserTargetsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","export default \".update-header {\\n  color: #4F4F4F;\\n  font-size: 20px;\\n  font-weight: 200;\\n  line-height: 22px;\\n  margin-left: 30px;\\n}\\n\\n.ui.fluid.container {\\n  padding: 25px;\\n}\\n\\n.outer-basic {\\n  background-color: #FFF;\\n  box-shadow: 3px 1px 4px 0 rgba(0, 0, 0, 0.4);\\n  border-radius: 20px;\\n}\\n\\n.outer-basicForm {\\n  width: 100%;\\n  height: auto;\\n}\\n\\n.filter_btn {\\n  border-radius: 3px;\\n  background-color: #437ADA;\\n  margin-top: 8px;\\n}\\n\\n.filter_btn_reset {\\n  border-radius: 3px;\\n  background-color: #cacbcd;\\n}\\n\\n.filter_list {\\n  color: #FFF;\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500;\\n  line-height: 15px;\\n  text-align: center;\\n}\\n\\n.icon {\\n  opacity: 1;\\n  z-index: 100;\\n}\\n\\n.icon .corporate_input__placeholder-icon {\\n  width: 24px;\\n  margin-top: 6px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.cal {\\n  width: 0px;\\n  margin-top: 10px;\\n  font-size: 13px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.call {\\n  width: 15px;\\n  margin-top: 10px;\\n  margin-left: 7px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.calll {\\n  width: 20px;\\n  margin-top: 10px;\\n}\\n\\n.icon .corporate_input__placeholder-icon.ico {\\n  width: 15px;\\n  margin-top: 10px;\\n}\\n\\n.search-field-wrapper {\\n  padding-bottom: 32px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3VzZXJzL0U6XFxCZWxhbFxccHJvamVjdHNcXGFnZ3JlZ2F0b3ItZnJvbnRlbmQvc3JjXFxhcHBcXGxheW91dFxcdXNlcnNcXHVzZXJzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9sYXlvdXQvdXNlcnMvdXNlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSw0Q0FBQTtFQUNBLG1CQUFBO0FDQ0o7O0FERUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREdBO0VBQ0ksa0JBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7QUNBSjs7QURHQTtFQUNJLGtCQUFBO0VBQ0EseUJBQUE7QUNBSjs7QURHQTtFQUNJLFdBQUE7RUFDQSxpQ0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNBSjs7QURHQTtFQUNJLFVBQUE7RUFDQSxZQUFBO0FDQUo7O0FEQ0k7RUFDSSxXQUFBO0VBQ0EsZUFBQTtBQ0NSOztBREFRO0VBQ0ksVUFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtBQ0VaOztBREFRO0VBQ0ksV0FBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUNFWjs7QURBUTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtBQ0VaOztBREFRO0VBQ0ksV0FBQTtFQUNBLGdCQUFBO0FDRVo7O0FER0E7RUFDSSxvQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVwZGF0ZS1oZWFkZXIge1xyXG4gICAgY29sb3I6ICM0RjRGNEY7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLnVpLmZsdWlkLmNvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAyNXB4O1xyXG59XHJcblxyXG4ub3V0ZXItYmFzaWMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgIGJveC1zaGFkb3c6IDNweCAxcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxufVxyXG5cclxuLm91dGVyLWJhc2ljRm9ybSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIC8vIHBhZGRpbmc6IDUwcHg7XHJcbn1cclxuXHJcbi5maWx0ZXJfYnRuIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MzdBREE7XHJcbiAgICBtYXJnaW4tdG9wOjhweDtcclxufVxyXG5cclxuLmZpbHRlcl9idG5fcmVzZXQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojY2FjYmNkO1xyXG59XHJcblxyXG4uZmlsdGVyX2xpc3Qge1xyXG4gICAgY29sb3I6ICNGRkY7XHJcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDE1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5pY29uIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbiAgICAuY29ycG9yYXRlX2lucHV0X19wbGFjZWhvbGRlci1pY29uIHtcclxuICAgICAgICB3aWR0aDogMjRweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiA2cHg7XHJcbiAgICAgICAgJi5jYWwge1xyXG4gICAgICAgICAgICB3aWR0aDogMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYuY2FsbCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxNXB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogN3B4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLmNhbGxsIHtcclxuICAgICAgICAgICAgd2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYuaWNvIHtcclxuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uc2VhcmNoLWZpZWxkLXdyYXBwZXIge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDMycHg7XHJcbn0iLCIudXBkYXRlLWhlYWRlciB7XG4gIGNvbG9yOiAjNEY0RjRGO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxuLnVpLmZsdWlkLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDI1cHg7XG59XG5cbi5vdXRlci1iYXNpYyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XG4gIGJveC1zaGFkb3c6IDNweCAxcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xufVxuXG4ub3V0ZXItYmFzaWNGb3JtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLmZpbHRlcl9idG4ge1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0MzdBREE7XG4gIG1hcmdpbi10b3A6IDhweDtcbn1cblxuLmZpbHRlcl9idG5fcmVzZXQge1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjYWNiY2Q7XG59XG5cbi5maWx0ZXJfbGlzdCB7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMTVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaWNvbiB7XG4gIG9wYWNpdHk6IDE7XG4gIHotaW5kZXg6IDEwMDtcbn1cbi5pY29uIC5jb3Jwb3JhdGVfaW5wdXRfX3BsYWNlaG9sZGVyLWljb24ge1xuICB3aWR0aDogMjRweDtcbiAgbWFyZ2luLXRvcDogNnB4O1xufVxuLmljb24gLmNvcnBvcmF0ZV9pbnB1dF9fcGxhY2Vob2xkZXItaWNvbi5jYWwge1xuICB3aWR0aDogMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBmb250LXNpemU6IDEzcHg7XG59XG4uaWNvbiAuY29ycG9yYXRlX2lucHV0X19wbGFjZWhvbGRlci1pY29uLmNhbGwge1xuICB3aWR0aDogMTVweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDdweDtcbn1cbi5pY29uIC5jb3Jwb3JhdGVfaW5wdXRfX3BsYWNlaG9sZGVyLWljb24uY2FsbGwge1xuICB3aWR0aDogMjBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cbi5pY29uIC5jb3Jwb3JhdGVfaW5wdXRfX3BsYWNlaG9sZGVyLWljb24uaWNvIHtcbiAgd2lkdGg6IDE1cHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5zZWFyY2gtZmllbGQtd3JhcHBlciB7XG4gIHBhZGRpbmctYm90dG9tOiAzMnB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserService } from '../../shared/services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  searchUserForm: FormGroup;\r\n  formIsSubmitted: boolean = false;\r\n\r\n  users: any = [];\r\n  offset: number = 0;\r\n  totalCount: number = 0;\r\n  offsetEvent = {\r\n    page: this.offset\r\n  }\r\n\r\n  constructor(private router: Router, private _fb: FormBuilder, private userService: UserService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.createSearchUserForm();\r\n\r\n    const data = {\r\n      page: this.offset,\r\n      // roleType: ,\r\n      organisation_id: 'all',\r\n      usernameAndAgentCode: null\r\n    };\r\n    this.userService.fetchUsers(data).subscribe(r => {\r\n      if (r.status) {\r\n        this.users = r.result.data;\r\n        this.totalCount = r.result.total;\r\n        this.offset = r.result.page;\r\n      }\r\n      else {\r\n        this.toastr.error(r.msg, 'Server Error !', {\r\n          disableTimeOut: false,\r\n          progressBar: false,\r\n          positionClass: 'toast-bottom-right'\r\n        });\r\n      }\r\n    }, (apiError: HttpErrorResponse) => {\r\n      this.toastr.error(`Oops! ${apiError.error.message}`, 'Server Error!', {\r\n        disableTimeOut: false,\r\n        progressBar: false,\r\n        positionClass: 'toast-bottom-right'\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  searchFormSubmit() {\r\n    this.formIsSubmitted = true;\r\n\r\n    if( !this.searchUserForm.valid ) {\r\n      return ;\r\n    }\r\n\r\n    const data = {\r\n      search: this.gfc.corporate_type.value,\r\n      name: this.gfc.nameAndOfficeId.value,\r\n    }\r\n    console.log(data)\r\n    this.formIsSubmitted = false;\r\n    return ;\r\n  }\r\n\r\n  addNewUser() {\r\n    return this.router.navigateByUrl('users/new');\r\n  }\r\n\r\n  createSearchUserForm() {\r\n    this.searchUserForm = this._fb.group({\r\n      corporate_type: ['all'],\r\n      nameAndOfficeId: [null, Validators.required]\r\n    })\r\n  }\r\n\r\n  get gfc() { return this.searchUserForm.controls };\r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\n\r\nimport { UsersComponent } from './users.component';\r\nimport { UserNewComponent } from './user-new/user-new.component';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserTargetsComponent } from './user-targets/user-targets.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [UsersComponent, UserNewComponent, UserEditComponent, UserTargetsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class UsersModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from './../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n\r\n    private apiUrl = environment.serverURL;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    createUser(data): Observable<any> {\r\n        return this.http.post(`${this.apiUrl}/api/create-new-user`, data).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    updateUser(data): Observable<any> {\r\n        return this.http.put(`${this.apiUrl}/api/update-user`, data).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    fetchUser(id): Observable<any> {\r\n        return this.http.get(`${this.apiUrl}/api/fetch-new-user/${id}`).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    fetchUsers(data): Observable<any> {\r\n        return this.http.post(`${this.apiUrl}/api/fetch-all-users`, data).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n    \r\n    fetchRoles(): Observable<any> {\r\n        return this.http.get(`${this.apiUrl}/api/roles/list`).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n    \r\n    fetchOrganizations(): Observable<any> {\r\n        return this.http.get(`${this.apiUrl}/api/fetch-all-organization`).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    savePermissions(data): Observable<any> {\r\n        return this.http.post(`${this.apiUrl}/api/users/permission`, data).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n    \r\n    fetchPermissions(): Observable<any> {\r\n        return this.http.get(`${this.apiUrl}/api/users/permissions`).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    saveTargets(data): Observable<any> {\r\n        return this.http.post(`${this.apiUrl}/api/users/target`, data).pipe(\r\n            tap(async (result: any) => {\r\n                return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    /*\r\n\r\n    listUsers(): Observable<any> {\r\n        return this.http.get(`${this.apiUrl}/api/users`).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    fetchTargets(userId): Observable<any> {\r\n        return this.http.get(`${this.apiUrl}/api/users/targets/${userId}`).pipe(\r\n            tap(async (result: any) => {\r\n            return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    \r\n    */\r\n\r\n   \r\n}\r\n"]}