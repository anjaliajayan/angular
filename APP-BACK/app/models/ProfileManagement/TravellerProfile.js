var moment = require('moment');

module.exports = (sequelize, type) => {
    let travellerModel = sequelize.define('travellers', {
    traveller_profile_id: type.INTEGER,
    organisation_id: type.INTEGER,
    salutation: type.STRING,
    first_name: type.STRING,
    last_name: type.STRING,
    dob: type.STRING,
    gender: type.STRING,
    customer_index: type.STRING,
    status: type.INTEGER,
    passenger_type: type.STRING,
    company_name: type.STRING,
    languages: type.INTEGER,
    nationality: type.STRING,
    number_details: type.TEXT,
    add_email: type.TEXT,
    address_details: type.TEXT,
    job_title: type.STRING,
    category: type.STRING,
    marital_status: type.STRING,
    no_children: type.INTEGER,
    customers: type.TEXT,
    agency_office: type.TEXT,
    agency_contact_name: type.TEXT,
    misc_ticketing: type.TEXT,
    ticketing_arrangements: type.TEXT,
    original_issue: type.TEXT,
    tour_code: type.TEXT,
    validating_carrier: type.TEXT,
    shadow_destination: type.STRING,
    keywords: type.TEXT,
    travel_management: type.STRING,
    fare_types: type.STRING,
    bank_code: type.STRING,
    bank_name: type.STRING,
    bank_number: type.INTEGER,
    bank_valid_from: type.DATE,
    bank_valid_to: type.DATE,
    direct_debit_authorized: type.BOOLEAN,
    forms_of_payment: type.TEXT,
    fare_price_override: type.TEXT,
    endorsements: type.TEXT,
    discount: type.INTEGER,
    commission: type.TEXT,
    accounting: type.TEXT,
    remarks: type.TEXT,
    profile_notes: type.TEXT,
    priority_lines: type.TEXT,
    follow_up: type.TEXT,
    special_needs: type.TEXT,
    frequent_flyers: type.TEXT,
    seating_preferences: type.TEXT,
    home_airport: type.STRING,
    arrival_airport: type.STRING,
    delivery_method: type.STRING,
    delivery_time: type.STRING,
    airline_preferrences: type.TEXT,
    a_dob: type.STRING,
    address: type.STRING,
    postal_code: type.STRING,
    list_country:type.STRING,
    state:type.STRING,
    city:type.STRING,
    street:type.STRING,
    mobile_number:type.STRING,
    emergency_contact:type.STRING,
    email_address1:type.STRING,
    email_address2:type.STRING,
    relationship:type.STRING,
    associate_profile:type.STRING,
    document1:type.STRING,
    document2:type.STRING,
    document3:type.STRING,
    national_id:type.STRING,
    passport:type.STRING,
    driving_licence:type.STRING,
    national_id_issueDate:type.STRING,
    national_id_expiryDate:type.STRING,
    passport_issueDate:type.STRING,
    passport_expiryDate:type.STRING,
    driving_licence_issueDate:type.STRING,
    driving_licence_expiryDate:type.STRING,
    national_id_placeofissue:type.STRING,
    passport_placeofissue:type.STRING,
    driving_licence_placeofissue:type.STRING,
    image1:type.STRING,
    image2:type.STRING,
    image3:type.STRING,
    corporate:type.BOOLEAN,
    designation:type.STRING,
    employeeId:type.STRING,
    department:type.STRING,
    company_number:type.STRING,
    company_emailid:type.STRING,
    traveller_remarks:type.STRING,
    company_address:type.STRING,
    traveller_type:type.STRING,
    other_remarks:type.STRING,
    cabin_class:type.STRING,
    meal_type:type.STRING,
    meal_type2:type.STRING,
    classification:type.STRING,
    airline_details: type.TEXT,
    corporate_profileid: type.TEXT,
    seat_preference:type.STRING,
    airlinePreference:type.TEXT,
    contact_country_id:type.STRING,
    country_id:type.STRING,
    city_id:type.STRING,
    corporate_supplierid:type.STRING,
    airlinePreferences:type.TEXT,
    created: {
      type: type.DATE,
      get() { return moment(this.getDataValue('created')).format('DD/MM/YYYY h:mm:ss'); },
    }
  }, {
    freezeTableName: true,
    // subQuery: false,
    timestamps: false,
    // underscored: true,
  });
  return travellerModel;
};
